name: CI + Artifact Creation

on:
    push:
        branches:
            - '*'
    pull_request:
        branches:
            - main
    workflow_dispatch:
permissions:
  contents: read
  actions: read
  checks: write

jobs:
  # Die Umgebung wird hier aufgesetzt. Dabei werden dependencies installiert und gecached
    setup-environment:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Cache Node.js modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                    ${{ runner.os }}-node-modules-

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '18'

            - name: Install Dependencies
              run: npm install

            - name: List directory (debugging)
              run: ls

    # Hier werden die Tests laufen gelassen. Dabei werden die dependencies, die gecached worden sind, aufgerufen und die tests werden ausgeführt. Auch wird ein Test report veröffentlicht.
    run-test:
        runs-on: ubuntu-22.04
        needs: setup-environment
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Cache Node.js modules (restore cache if available)
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                    ${{ runner.os }}-node-modules-

            - name: Run Tests
              run: npm run test

            - name: Test Report
              uses: dorny/test-reporter@v1
              if: success() || failure()
              with:
                name: Sachi ToDo JEST Tests            
                path: reports/junit.xml    
                reporter: jest-junit        
      

    # Der linter schaut ob es potenzielle Probleme im code gibt und meldet diese
    lint:
        runs-on: ubuntu-22.04
        needs: setup-environment
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Cache Node.js modules (restore cache if available)
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                    ${{ runner.os }}-node-modules-

            - name: Lint application
              run: npm run lint

    # In diesem prozess wird die Applikation gebaut. Diese wäre dann potenziell bereit dazu published zu werden, nachdem es in die Artifacts abgespeichert worden ist.
    build-app:
        runs-on: ubuntu-22.04
        needs: [lint, run-test]
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Cache Node.js modules (restore cache if available)
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                    ${{ runner.os }}-node-modules-
                

            - name: Build Application
              run: npm run build
            
            - name: List directory (debugging)
              run: ls -la
              
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              if: failure()
              with:
                name: TodoApp
                path: .next
                if-no-files-found: error
                retention-days: 15
